@startuml
!include <C4/C4_Container>

Person(admin, "Администратор", "Управляет подписками и уведомлениями")
Person(user, "Пользователь", "")

System_Boundary(wormHouse, "Тёплый дом") {
Container(web_app, "Веб-приложение", "JavaScript/React", "Интерфейс для пользователей")
Container(gateway, "API Gateway", "Nginx", "Маршрутизация и авторизация запросов")
Container(heating_control, "Управление отоплением", "Java", "Управление и контроль системы отопления")
Container(lighting_control, "Управление освещением", "Java", "Управление и контроль системы освещения")
Container(home_access_control, "Управление доступом к дому", "Java", "Управление доступом к дому и контроль безопасности")
Container(video_surveillance, "Видеонаблюдение", "Java", "Управление видеонаблюдение")
Container(device_management, "Управление устройствами", "Java", "Управление устройствами и их конфигурацией")
Container(automation_scenarios, "Управление сценариями автоматизации", "Java", "Обработка и выполнение сценариев автоматизации")
Container(partners, "Управление интеграциями с партнёрами", "Java", "Управление интеграциями с партнерскими устройствами и сервисами")
Container(auth, "Пользователи", "Java", "Аутентификация и авторизация пользователей")
Container(notification, "Уведомления", "Java", "Управление и отправка уведомлений")
Container(payment_service, "Платежи", "Java", "Обработка платежей и управление биллингом")
Container(support, "Клиентская поддержка", "Java", "Обработка обращений пользователей и управление поддержкой")
Container(subscription, "Управление подписками", "Java", "Управление подписками и тарифными планами")

ContainerDb(home_access_control_database, "База данных", "PostgreSQL", "Хранение истории доступа к дому")
ContainerDb(video_surveillance_database, "База данных", "PostgreSQL", "Хранение информации о видеозаписях")
ContainerDb(video_surveillance_s3, "Хранилище", "S3", "Хранение видеозаписей")
ContainerDb(device_management_database, "База данных", "PostgreSQL", "Хранение информации об устройствах пользователей")
ContainerDb(automation_scenarios_database, "База данных", "PostgreSQL", "Хранение сценариев автоматизации")
ContainerDb(partners_database, "База данных", "PostgreSQL", "Хранение датчиков и систем партнеров")
ContainerDb(auth_database, "База данных", "PostgreSQL", "Хранение пользователей")
ContainerDb(notification_database, "База данных", "PostgreSQL", "Хранение шаблонов уведомлений")
ContainerDb(payment_database, "База данных", "PostgreSQL", "Хранение статусов платежей")
ContainerDb(support_database, "База данных", "PostgreSQL", "Хранение обращений пользователей")
ContainerDb(subscription_database, "База данных", "PostgreSQL", "Хранение подписок")
ContainerDb(broker, "Брокер сообщений", "Apache Kafka", "Шина для внутрисистемного общения")
}

System_Ext(email, "Email-сервис", "Отправка уведомлений")
System_Ext(payment, "Платежный шлюз", "Обработка платежей.")
System_Ext(partner, "Парнерские системы", "Датчики и системы умного дома")

Rel(web_app, gateway, "HTTP/REST API")

Rel(gateway, heating_control, "HTTP/REST API")
Rel(gateway, lighting_control, "HTTP/REST API")
Rel(gateway, home_access_control, "HTTP/REST API")
Rel(gateway, video_surveillance, "HTTP/REST API")
Rel(gateway, video_surveillance_s3, "HTTP/REST API")
Rel(gateway, device_management, "HTTP/REST API")
Rel(gateway, automation_scenarios, "HTTP/REST API")
Rel(gateway, partners, "HTTP/REST API")
Rel(gateway, notification, "HTTP/REST API")
Rel(gateway, payment_service, "HTTP/REST API")
Rel(gateway, support, "HTTP/REST API")
Rel(gateway, subscription, "HTTP/REST API")
Rel(gateway, auth, "HTTP/REST API")

Rel(heating_control, broker, "TCP")
Rel(lighting_control, broker, "TCP")
Rel(home_access_control, broker, "TCP")
Rel(video_surveillance, broker, "TCP")
Rel(video_surveillance_s3, broker, "TCP")
Rel(device_management, broker, "TCP")
Rel(automation_scenarios, broker, "TCP")
Rel(partners, broker, "TCP")
Rel(notification, broker, "TCP")
Rel(payment_service, broker, "TCP")
Rel(support, broker, "TCP")
Rel(subscription, broker, "TCP")
Rel(auth, broker, "TCP")

Rel(admin, web_app, "Управляет", "HTTP")
Rel(user, web_app, "Использует", "HTTP")

Rel(partner, gateway, "Управляют датчиками через кабинет партнера", "HTTP")

Rel(home_access_control, home_access_control_database, "JDBC")
Rel(video_surveillance, video_surveillance_database, "JDBC")
Rel(video_surveillance, video_surveillance_s3, "HTTP")
Rel(device_management, device_management_database, "JDBC")
Rel(automation_scenarios, automation_scenarios_database, "JDBC")
Rel(partners, partners_database, "JDBC")
Rel(notification, notification_database, "JDBC")
Rel(payment_service, payment_database, "JDBC")
Rel(support, support_database, "JDBC")
Rel(subscription, subscription_database, "JDBC")
Rel(auth, auth_database, "JDBC")

Rel(notification, email, "Направляет уведомление", "SMTP")
Rel(payment_service, payment, "Направляет на выполнение платежа", "HTTP")
@enduml